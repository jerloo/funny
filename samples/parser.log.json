===========Comment // @title funny.fun

===========Comment // @author: jerloo@gmail.com

===========Comment // @homepage github: https://github.com/jerloo/funny

===========NewLine 

===========FunctionCall echoln('define a varible value 1')
===========NewLine 

===========Assign a = 1
===========NewLine 

===========NewLine 

===========FunctionCall echoln('define b varible value 2')
===========NewLine 

===========Assign b = 2
===========NewLine 

===========NewLine 

===========FunctionCall echoln('define c varible value a ')
===========NewLine 

===========Assign c = a
===========NewLine 

===========NewLine 

===========FunctionCall echoln('a, b, c values: ')
===========NewLine 

===========FunctionCall echoln('a = ', a, ', b = ', b, ', c = ', c)
===========NewLine 

===========NewLine 

===========FunctionCall echoln('assert c equels 1')
===========NewLine 

===========FunctionCall assert(c == 1)
===========NewLine 

===========NewLine 

===========Assign d = c + b
===========NewLine 

===========NewLine 

===========FunctionCall echoln('assert (d = c + b) === ', d)
===========NewLine 

===========FunctionCall assert(d == 3)
===========NewLine 

===========NewLine 

===========FunctionCall echoln('define a function ')
===========NewLine 

===========FunctionCall echoln('minus(a, b) {')
===========NewLine 

===========FunctionCall echoln('  return b - a')
===========NewLine 

===========FunctionCall echoln('}')
===========NewLine 

===========NewLine 

===========Function minus(a, b) {
  return b - a
}
===========NewLine 

===========NewLine 

===========Assign e = minus(a, b)
===========NewLine 

===========FunctionCall echoln('minus(a, b) === ', e)
===========NewLine 

===========FunctionCall assert(e == 1)
===========NewLine 

===========NewLine 

===========IfStatement if a > 0 {
  echoln('if a > 0')
}
===========NewLine 

===========NewLine 

===========Function fib(n) {
  if n < 2 {
    return n
  }
  return fib(n - 1) + fib(n - 2)
}
===========NewLine 

===========NewLine 

===========Assign r = fib(1)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(2)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(3)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(4)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(5)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(6)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(7)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========Assign r = fib(8)
===========NewLine 

===========FunctionCall echoln(r)
===========NewLine 

===========NewLine 

===========Assign person = {
  name = 'jerloo'
  age = 10
}
===========NewLine 

===========FunctionCall assert(person.name == 'jerloo')
===========NewLine 

===========FunctionCall echoln(person.age)
===========NewLine 

===========NewLine 

===========Function Object() {
  return {
    name = 'jerloo'
    age = 10
    isAdult() {
      this.age = this.age + 5
      echoln('this.age ', this.age)
      return true
    }
  }
}
===========NewLine 

===========NewLine 

===========Assign obj = Object()
===========NewLine 

===========FunctionCall assert(obj.name == 'jerloo')
===========NewLine 

===========Assign obj.age = 20
===========NewLine 

===========FunctionCall assert(obj.age == 20)
===========NewLine 

===========FunctionCall assert(obj.isAdult())
===========NewLine 

===========FunctionCall echoln(obj.isAdult())
===========NewLine 

===========FunctionCall echoln(obj.age)
===========NewLine 

===========NewLine 

===========Assign arrdemo = [  1, 2, 3]
===========NewLine 

===========FunctionCall echoln(arrdemo[2])
===========NewLine 

===========FunctionCall assert(arrdemo[2] == 3)
===========NewLine 

===========NewLine 

===========Assign md5Test = 'i am string'
===========NewLine 

===========FunctionCall echoln(md5Test)
===========NewLine 

===========FunctionCall echoln('md5(i am string) => ', md5(md5Test))
===========NewLine 

===========NewLine 

===========FunctionCall echoln('max(10, 20) => ', max(10, 20))
===========NewLine 

===========NewLine 

===========NewLine 

===========FunctionCall echoln('i am imported')
===========NewLine 

===========NewLine 

===========NewLine 

===========FunctionCall echoln('uuid => ', uuid())
===========NewLine 

===========NewLine 

===========Assign deepObj = {
  a = {
    b = {
      c = 1
    }
  }
}
===========NewLine 

===========NewLine 

===========FunctionCall echoln('deepObj.a =>', deepObj.a)
===========NewLine 

===========FunctionCall echoln('deepObj.a.b =>', deepObj.a.b)
===========NewLine 

===========FunctionCall echoln('deepObj.a.b.c =>', deepObj.a.b.c)
[
  {
    "Value": " @title funny.fun"
  },
  {
    "Value": " @author: jerloo@gmail.com"
  },
  {
    "Value": " @homepage github: https://github.com/jerloo/funny"
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "define a varible value 1"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "a"
    },
    "Value": {
      "Value": 1
    }
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "define b varible value 2"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "b"
    },
    "Value": {
      "Value": 2
    }
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "define c varible value a "
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "c"
    },
    "Value": {
      "Name": "a"
    }
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "a, b, c values: "
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "a = "
      },
      {
        "Name": "a"
      },
      {
        "Value": ", b = "
      },
      {
        "Name": "b"
      },
      {
        "Value": ", c = "
      },
      {
        "Name": "c"
      }
    ]
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "assert c equels 1"
      }
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Name": "c"
        },
        "Operator": {
          "Position": {
            "Line": 15,
            "Col": 11
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": 1
        }
      }
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "d"
    },
    "Value": {
      "Left": {
        "Name": "c"
      },
      "Operator": {
        "Position": {
          "Line": 17,
          "Col": 7
        },
        "Kind": "+",
        "Data": "+"
      },
      "Right": {
        "Name": "b"
      }
    }
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "assert (d = c + b) === "
      },
      {
        "Name": "d"
      }
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Name": "d"
        },
        "Operator": {
          "Position": {
            "Line": 20,
            "Col": 11
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": 3
        }
      }
    ]
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "define a function "
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "minus(a, b) {"
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "  return b - a"
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "}"
      }
    ]
  },
  {},
  {},
  {
    "Name": "minus",
    "Parameters": [
      {
        "Name": "a"
      },
      {
        "Name": "b"
      }
    ],
    "Body": [
      {},
      {
        "Value": {
          "Left": {
            "Name": "b"
          },
          "Operator": {
            "Position": {
              "Line": 28,
              "Col": 12
            },
            "Kind": "-",
            "Data": "-"
          },
          "Right": {
            "Name": "a"
          }
        }
      },
      {}
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "e"
    },
    "Value": {
      "Name": "minus",
      "Parameters": [
        {
          "Name": "a"
        },
        {
          "Name": "b"
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "minus(a, b) === "
      },
      {
        "Name": "e"
      }
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Name": "e"
        },
        "Operator": {
          "Position": {
            "Line": 33,
            "Col": 11
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": 1
        }
      }
    ]
  },
  {},
  {},
  {
    "Condition": {
      "Left": {
        "Name": "a"
      },
      "Operator": {
        "Position": {
          "Line": 35,
          "Col": 6
        },
        "Kind": "\u003e",
        "Data": "\u003e"
      },
      "Right": {
        "Value": 0
      }
    },
    "Body": [
      {},
      {
        "Name": "echoln",
        "Parameters": [
          {
            "Value": "if a \u003e 0"
          }
        ]
      },
      {}
    ],
    "Else": null
  },
  {},
  {},
  {
    "Name": "fib",
    "Parameters": [
      {
        "Name": "n"
      }
    ],
    "Body": [
      {},
      {
        "Condition": {
          "Left": {
            "Name": "n"
          },
          "Operator": {
            "Position": {
              "Line": 40,
              "Col": 8
            },
            "Kind": "\u003c",
            "Data": "\u003c"
          },
          "Right": {
            "Value": 2
          }
        },
        "Body": [
          {},
          {
            "Value": {
              "Name": "n"
            }
          },
          {}
        ],
        "Else": null
      },
      {},
      {
        "Value": {
          "Left": {
            "Name": "fib",
            "Parameters": [
              {
                "Left": {
                  "Name": "n"
                },
                "Operator": {
                  "Position": {
                    "Line": 43,
                    "Col": 16
                  },
                  "Kind": "-",
                  "Data": "-"
                },
                "Right": {
                  "Value": 1
                }
              }
            ]
          },
          "Operator": {
            "Position": {
              "Line": 43,
              "Col": 21
            },
            "Kind": "+",
            "Data": "+"
          },
          "Right": {
            "Name": "fib",
            "Parameters": [
              {
                "Left": {
                  "Name": "n"
                },
                "Operator": {
                  "Position": {
                    "Line": 43,
                    "Col": 29
                  },
                  "Kind": "-",
                  "Data": "-"
                },
                "Right": {
                  "Value": 2
                }
              }
            ]
          }
        }
      },
      {}
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 1
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 2
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 3
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 4
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 5
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 6
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 7
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {
    "Target": {
      "Name": "r"
    },
    "Value": {
      "Name": "fib",
      "Parameters": [
        {
          "Value": 8
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "r"
      }
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "person"
    },
    "Value": [
      {},
      {
        "Target": {
          "Name": "name"
        },
        "Value": {
          "Value": "jerloo"
        }
      },
      {},
      {
        "Target": {
          "Name": "age"
        },
        "Value": {
          "Value": 10
        }
      },
      {}
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Variable": {
            "Name": "person"
          },
          "Value": {
            "Name": "name"
          }
        },
        "Operator": {
          "Position": {
            "Line": 67,
            "Col": 21
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": "jerloo"
        }
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Variable": {
          "Name": "person"
        },
        "Value": {
          "Name": "age"
        }
      }
    ]
  },
  {},
  {},
  {
    "Name": "Object",
    "Parameters": null,
    "Body": [
      {},
      {
        "Value": [
          {},
          {
            "Target": {
              "Name": "name"
            },
            "Value": {
              "Value": "jerloo"
            }
          },
          {},
          {
            "Target": {
              "Name": "age"
            },
            "Value": {
              "Value": 10
            }
          },
          {},
          {
            "Name": "isAdult",
            "Parameters": null,
            "Body": [
              {},
              {
                "Target": {
                  "Variable": {
                    "Name": "this"
                  },
                  "Value": {
                    "Name": "age"
                  }
                },
                "Value": {
                  "Left": {
                    "Variable": {
                      "Name": "this"
                    },
                    "Value": {
                      "Name": "age"
                    }
                  },
                  "Operator": {
                    "Position": {
                      "Line": 75,
                      "Col": 27
                    },
                    "Kind": "+",
                    "Data": "+"
                  },
                  "Right": {
                    "Value": 5
                  }
                }
              },
              {},
              {
                "Name": "echoln",
                "Parameters": [
                  {
                    "Value": "this.age "
                  },
                  {
                    "Variable": {
                      "Name": "this"
                    },
                    "Value": {
                      "Name": "age"
                    }
                  }
                ]
              },
              {},
              {
                "Value": {
                  "Value": true
                }
              },
              {}
            ]
          },
          {}
        ]
      },
      {}
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "obj"
    },
    "Value": {
      "Name": "Object",
      "Parameters": null
    }
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Variable": {
            "Name": "obj"
          },
          "Value": {
            "Name": "name"
          }
        },
        "Operator": {
          "Position": {
            "Line": 83,
            "Col": 18
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": "jerloo"
        }
      }
    ]
  },
  {},
  {
    "Target": {
      "Variable": {
        "Name": "obj"
      },
      "Value": {
        "Name": "age"
      }
    },
    "Value": {
      "Value": 20
    }
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Variable": {
            "Name": "obj"
          },
          "Value": {
            "Name": "age"
          }
        },
        "Operator": {
          "Position": {
            "Line": 85,
            "Col": 17
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": 20
        }
      }
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Variable": {
          "Name": "obj"
        },
        "Value": {
          "Name": "isAdult",
          "Parameters": null
        }
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Variable": {
          "Name": "obj"
        },
        "Value": {
          "Name": "isAdult",
          "Parameters": null
        }
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Variable": {
          "Name": "obj"
        },
        "Value": {
          "Name": "age"
        }
      }
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "arrdemo"
    },
    "Value": {
      "Values": [
        {
          "Value": 1
        },
        {
          "Value": 2
        },
        {
          "Value": 3
        }
      ]
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Index": 2,
        "List": {
          "Name": "arrdemo"
        }
      }
    ]
  },
  {},
  {
    "Name": "assert",
    "Parameters": [
      {
        "Left": {
          "Index": 2,
          "List": {
            "Name": "arrdemo"
          }
        },
        "Operator": {
          "Position": {
            "Line": 92,
            "Col": 19
          },
          "Kind": "==",
          "Data": "=="
        },
        "Right": {
          "Value": 3
        }
      }
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "md5Test"
    },
    "Value": {
      "Value": "i am string"
    }
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Name": "md5Test"
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "md5(i am string) =\u003e "
      },
      {
        "Name": "md5",
        "Parameters": [
          {
            "Name": "md5Test"
          }
        ]
      }
    ]
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "max(10, 20) =\u003e "
      },
      {
        "Name": "max",
        "Parameters": [
          {
            "Value": 10
          },
          {
            "Value": 20
          }
        ]
      }
    ]
  },
  {},
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "i am imported"
      }
    ]
  },
  {},
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "uuid =\u003e "
      },
      {
        "Name": "uuid",
        "Parameters": null
      }
    ]
  },
  {},
  {},
  {
    "Target": {
      "Name": "deepObj"
    },
    "Value": [
      {},
      {
        "Target": {
          "Name": "a"
        },
        "Value": [
          {},
          {
            "Target": {
              "Name": "b"
            },
            "Value": [
              {},
              {
                "Target": {
                  "Name": "c"
                },
                "Value": {
                  "Value": 1
                }
              },
              {}
            ]
          },
          {}
        ]
      },
      {}
    ]
  },
  {},
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "deepObj.a =\u003e"
      },
      {
        "Variable": {
          "Name": "deepObj"
        },
        "Value": {
          "Name": "a"
        }
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "deepObj.a.b =\u003e"
      },
      {
        "Variable": {
          "Name": "deepObj"
        },
        "Value": {
          "Variable": {
            "Name": "a"
          },
          "Value": {
            "Name": "b"
          }
        }
      }
    ]
  },
  {},
  {
    "Name": "echoln",
    "Parameters": [
      {
        "Value": "deepObj.a.b.c =\u003e"
      },
      {
        "Variable": {
          "Name": "deepObj"
        },
        "Value": {
          "Variable": {
            "Name": "a"
          },
          "Value": {
            "Variable": {
              "Name": "b"
            },
            "Value": {
              "Name": "c"
            }
          }
        }
      }
    ]
  }
]
